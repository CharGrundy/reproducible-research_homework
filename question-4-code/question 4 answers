4) (30 points) Sometimes we are interested in modelling a process that
involves randomness. A good example is Brownian motion. We will
explore how to simulate a random process in a way that it is repro-
ducible:
• A script for simulating a random walk is provided in the
question-4-code folder of this repo. Execute the code to produce
the paths of two random walks. What do you observe? (10 points)

  When I run the code, I can observe two separate plots. Both plots have the exact same characteristics. Both plots produce random walks which begin at t=0 and end at t=500. The time of each walk is indicated by a colour gradient begining at a navy blue and ending in a lighter shade of blue. Each walk is made up of equally distanced 'steps' that have completely random directions for each step. Walks appear to meander around the starting point which is x=0 and y=0. How much they deviate from the starting point is down to random chance. Each time the code is ran the plots are completely different and move to different coordinates in the plots. One plot may move into more negative coordinates the other may not. 

• Investigate the term random seeds. What is a random seed and
how does it work? (5 points)

Random seeds in R are used to initialise a random number generator. A random number generator will produce a set of random numbers. A random number genrator is still deterministic though due to the algorithms used. These numbers that are used by the seed produce a 'random' plot. If you have two seeds with the same number, they will be identical. Essentially, the seed is the ID/barcode of that specific plot and allows for the reproduction of that plot. 

• Edit the script to make a reproducible simulation of Brownian
motion. Commit the file and push it to your forked
reproducible-research homework repo. (10 points)



• Go to your commit history and click on the latest commit. Show
the edit you made to the code in the comparison view (add this
image to the README.md of the fork). (5 points)